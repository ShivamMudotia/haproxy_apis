#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
            #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     9000
    user        haproxy
    group       haproxy
    daemon

    ssl-default-bind-options no-sslv3
    ssl-default-bind-ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

    ssl-default-server-options no-sslv3
    ssl-default-server-ciphers ECDH+AESGCM:ECDH+CHACHA20:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS

    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!3DES

    tune.ssl.default-dh-param 2048

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 10
    timeout http-request    2m
    timeout queue           1m
    timeout connect         1m
    timeout client          5m
    timeout server          5m
    timeout http-keep-alive 1m
    timeout check           2m
    maxconn                 12000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------

frontend https-in
  bind *:443 ssl crt /etc/haproxy/ssl no-sslv3
  mode http
  reqadd X-Forwarded-Proto:\ https
  rspadd Strict-Transport-Security:\ max-age=31536000
  option forwardfor

  acl tls req.ssl_hello_type 1

  acl host_app1 hdr(host) -i app1.testdomain.in
  acl host_app2 hdr(host) -i app2.testdomain.in
  acl host_app3 hdr(host) -i app3.testdomain.in
  acl host_app4 hdr(host) -i app4.testdomain.in
  acl host_app5 hdr(host) -i app5.testdomain.in
  acl host_app6 hdr(host) -i app6.testdomain.in

  use_backend backend1  if host_app1
  use_backend backend2  if host_app2
  use_backend backend3  if host_app3
  use_backend backend4  if host_app4
  use_backend backend5  if host_app5
  use_backend backend6  if host_app6
  default_backend  backend1

# keep backend server names convention as it is. eg: app1server1

backend backend1
    mode http
    option httpclose
    option forwardfor
    balance     roundrobin
    server app1server1 192.168.10.11:443  check ssl verify none maxconn 60000
    server app1server2 192.168.10.12:443  check ssl verify none maxconn 60000
    server app1server3 192.168.10.13:443  check ssl verify none maxconn 60000


backend backend2
    mode http
    option httpclose
    option forwardfor
    balance     roundrobin
    server app2server1 192.168.10.21:443  check ssl verify none maxconn 60000
    server app2server2 192.168.10.22:443  check ssl verify none maxconn 60000
    server app2server3 192.168.10.23:443  check ssl verify none maxconn 60000

backend backend3
    mode http
    option httpclose
    option forwardfor
    balance     roundrobin
    server app3server1 192.168.10.31:443  check ssl verify none maxconn 60000
    server app3server2 192.168.10.32:443  check ssl verify none maxconn 60000
    server app3server3 192.168.10.33:443  check ssl verify none maxconn 60000


backend backend4
    mode http
    option httpclose
    option forwardfor
    balance     roundrobin
    server app4server1 192.168.10.31:443  check ssl verify none maxconn 60000
    server app4server2 192.168.10.32:443  check ssl verify none maxconn 60000
    server app4server3 192.168.10.33:443  check ssl verify none maxconn 60000

backend backend5
    mode http
    option httpclose
    option forwardfor
    balance     roundrobin
    server app5server1 192.168.10.31:443  check ssl verify none maxconn 60000
    server app5server2 192.168.10.32:443  check ssl verify none maxconn 60000
    server app5server3 192.168.10.33:443  check ssl verify none maxconn 60000

backend backend6
    mode http
    option httpclose
    option forwardfor
    balance     roundrobin
    server app6server1 192.168.10.31:443  check ssl verify none maxconn 60000
    server app6server2 192.168.10.32:443  check ssl verify none maxconn 60000
    server app6server3 192.168.10.33:443  check ssl verify none maxconn 60000